#a configMap is used to store non-confidential data in key-value pairs.
#This will helps in connecting to db-host from backend i..e ensuring connection to db
kind: configMap
apiVersion: v1
metadata:  
  name: frontend
  namespace: expense
data:
  # for not applying rebuild we need to mention nginx.conf file and also nginx can't be run on 80 port in kubernetes thus we are including out nginx.conf
  # thus changin port number of nginx to 8080
  nginx.conf: |
  user www-data;
    worker_processes 4;
    pid /var/run/nginx.pid;

    events {
      worker_connections 768;
      # multi_accept on;
    }

    http {

      ##
      # Basic Settings
      ##

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      large_client_header_buffers 6 32k;
      client_max_body_size 100m;

      # server_names_hash_bucket_size 64;
      # server_name_in_redirect off;
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      ##
      # Logging Settings
      ##
      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log debug; # change from debug to warn or error for production

      ##
      # Gzip Settings
      ##
      gzip on;
      gzip_disable "msie6";

      ##
      # Virtual Host Configs
      ##

      include /etc/nginx/conf.d/*.conf;
      include /etc/nginx/sites-enabled/*;

      server {
        listen       8080;
        server_name  localhost;

        proxy_http_version 1.1;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;
        #error_log /dev/stdout debug;
        #rewrite_log on;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            ssi    on;
        }

        location /images/ {
            expires 5s;
            root   /usr/share/nginx/html;
            try_files $uri /images/placeholder.png;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /api/ { 
            proxy_pass http://backend:8080/;
        }

        }

    }
--------
kind: Deployment
apiVersion: apps/v1
metadata:
  name: frontend
  #creating mysql in expense namespace
  namespace: expense
  #thus labels are deployment related labels
  labels:
    component: frontend
    project: expense
    tier: web
spec:
  replicas: 2
  selector: 
    matchLabels:
      component: frontend
      tier: web
      project: expense
  #pod defintion
  template:
    metadata:
      labels:
        component: frontend
        tier: web
        project: expense
    spec:
    - name: frontend
      image: guru1188/frontend:v1.0
      # mounting volume nginx-conf
      volumeMounts:
      - name: nginx-conf
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx.conf
        readOnly: true
      volumes:
      - name: nginx-conf
      # envFrom:
      # - configMapRef:
      #     name: frontend
      volumes:
      - name: nginx-conf
        configMap:
          name: frontend
          items:
          - key: nginx.conf
            path: nginx.conf


------
# for connection mysql and backend pods we need to ensure to include a service, which will helps in communication between pods i.,e LoadBalancer
# This service helps in configuring in R53 records
apiVersion: v1
kind: Service
metadata: 
  name: frontend
  #attaching to expense namespace
  namespace: expense
spec: 
  type: LoadBalancer
  selectors:
    project: expense
    component: frontend
    tier: web
  ports:
  - protocol: TCP
    port: 80 #servicer port
    targetPort: 8080
    