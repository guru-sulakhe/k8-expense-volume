# claiming process of PersistentVolume
# PVC---> Persistent Volume Claim, pod should claim,i..e i want the volume from pod
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: expense #your namespace name which is created for the mysql
spec:
  storageClassName: "expense-ebs-dynamic-sc" # mention your storage class name which is created for dynamic provision of volumes
  accessModes:
    - ReadWriteOnce #the volume can be mounted as read-write by single node
  resources:
    requests:
      storage: 4Gi #creating 4Gi volume size of volume in ec2 resource of aws
-------
#A StatefulSet runs a group of Pods, and maintains a sticky identity for each of those Pods. 
#This is useful for managing applications that need persistent storage or a stable, unique network identity
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-StatefulSet
  namespace: expense
spec:
  selector:
    matchLabels:
      # has to match .spec.template.metadata.labels
      component: mysql 
      project: expense
      tier: db
  serviceName: "mysql"
  replicas: 2 # by default is 1
  template:
    metadata:
      labels:
        # has to match .spec.selector.matchLabels
        component: mysql 
        project: expense
        tier: db
    spec:
      containers:
      - name: mysql
        image: guru1188/mysql:v1.0
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: mysql
          mountPath: /var/lib/mysql #absolute path of mysql
      nodeSelector:
          topology.kubernetes.io/zone: us-east-1c # include your running node availability zone, must be in containers level of spec
      volumes:
      - name: mysql
        persistentVolumeClaim:
          claimName: mysql-pvc #your pvc name
-------
# This service is used to call nginx Pod
apiVersion: v1
kind: Service
metadata: 
  name: mysql
  namespace: expense
spec:
  clusterIP: None #This is called headless service
  selectors:
    component: mysql 
    project: expense
    tier: db
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
    