# Headless service is used for implementing of clustering service for mysql db.
# which will helps in communication of the data from one node to other nodes of cluster
apiVersion: v1
kind: Service
metadata: 
  name: mysql-headless
  namespace: expense
spec:
  clusterIP: None #For headless service clusterIP should be None
  selectors:
    component: mysql 
    project: expense
    tier: db
  ports:
  - protocol: TCP
    port: 3306 #service-port
    targetPort: 3306 #target-port
---
#Service is used to call a pod using the selector and runs pod in the mentioned ports
apiVersion: v1
kind: Service
metadata: 
  name: mysql
  namespace: expense
spec:
  selectors:
    component: mysql 
    project: expense
    tier: db
  ports:
  - protocol: TCP
    port: 3306 #service-port
    targetPort: 3306 #target-port
---
#A StatefulSet runs a group of Pods, and maintains a sticky identity for each of those Pods. 
#This is useful for managing applications that need persistent storage or a stable, unique network identity
#This is where StatefulSets enter the scene, ensuring that each pod's identity and data are maintained across restarts and rescheduling.
#a StatefulSet remembers its data (state) even if moved around in a cluster.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-StatefulSet
  namespace: expense
spec:
  selector:
    matchLabels:
      # has to match .spec.template.metadata.labels
      component: mysql 
      project: expense
      tier: db
  serviceName: "mysql-headless" #provide your headless service name
  replicas: 2 # by default is 1
  template:
    metadata:
      labels:
        # has to match .spec.selector.matchLabels
        component: mysql 
        project: expense
        tier: db
    spec:
      containers:
      - name: mysql
        image: guru1188/mysql:v1.0
        nodeSelector: #your nodes availability zone
          topology.kubernetes.io/zone=us-east-1a
        volumeMounts:
        - name: mysql
          mountPath: /var/lib/mysql #absolute path of mysql
  #PVC declaration
  volumeClaimTemplates:
  - metadata:
  name: mysql
  spec:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: "expense-ebs-dynamic-sc"
    resources:
      requests:
        storage: 1G
---

    